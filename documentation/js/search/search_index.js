var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.031,1,1.481]],["body/components/AppComponent.html",[0,1.775,1,2.436,2,0.4,3,0.4,4,2.77,5,2.77,6,2.77,7,2.77,8,0.277,9,2.252,10,1.556,11,4.323,12,2.252,13,4.323,14,4.323,15,2.265,16,3.791,17,4.323,18,3.791,19,3.791,20,0.4,21,0.74,22,4.323,23,4.869,24,3.779,25,4.648,26,3.779,27,4.648,28,3.791,29,4.648,30,1.382,31,2.77,32,1.833,33,1.667,34,3.791,35,1.655,36,0.047,37,0.966,38,0.727,39,0.619,40,2.77,41,1.452,42,3.791,43,2.77,44,2.152,45,2.152,46,0.907,47,2.77,48,2.152,49,2.77,50,2.152,51,2.77,52,0.74,53,1.908,54,3.779,55,2.152,56,0.981,57,1.01,58,2.77,59,1.282,60,2.77,61,2.77,62,2.77,63,2.252,64,0.337,65,0.117,66,1.098,67,2.77,68,2.77,69,3.791,70,2.77,71,3.791,72,2.77,73,2.77,74,1.452,75,1.452,76,2.77,77,2.77,78,2.77,79,2.77,80,2.77,81,2.77,82,1.452,83,2.77,84,3.791,85,5.027,86,5.027,87,3.791,88,3.791,89,3.791,90,3.791,91,3.791,92,1.91,93,3.791,94,3.791,95,3.791,96,4.648,97,2.77,98,2.77,99,0.031,100,0.031]],["title/modules/AppModule.html",[101,1.16,102,1.689]],["body/modules/AppModule.html",[1,2.985,2,0.525,3,0.525,8,0.363,32,1.975,36,0.047,56,1.084,57,1.324,63,2.951,64,0.551,65,0.153,92,2.503,99,0.036,100,0.036,101,1.857,102,3.388,103,2.169,104,4.008,105,3.4,106,2.946,107,2.951,108,2.951,109,2.951,110,2.951,111,2.951,112,2.838,113,3.678,114,2.951,115,1.49,116,3.63,117,4.525,118,1.902,119,3.678,120,4.525,121,2.951,122,2.503,123,3.63,124,3.63]],["title/interfaces/Cache.html",[125,0.07,126,1.308]],["body/interfaces/Cache.html",[0,1.13,2,0.183,3,0.183,8,0.127,15,0.662,20,0.183,21,0.408,30,0.461,32,0.461,33,1.004,36,0.048,37,0.596,38,0.302,39,0.282,41,2.347,46,0.247,52,0.852,53,0.519,55,1.235,56,0.721,57,0.461,59,0.585,64,0.154,65,0.145,66,1.249,74,1.937,75,2.049,82,1.624,99,0.017,100,0.017,115,1.095,118,0.662,125,0.108,126,2.158,127,0.662,128,0.662,129,1.852,130,2.722,131,1.248,132,1.962,133,1.595,134,2.051,135,1.937,136,2.337,137,2.97,138,2.97,139,0.938,140,1.264,141,1.248,142,1.248,143,1.248,144,2.443,145,0.967,146,2.208,147,2.398,148,1.248,149,0.755,150,0.755,151,0.755,152,0.967,153,0.755,154,0.247,155,0.986,156,2.051,157,0.755,158,0.755,159,0.755,160,1.595,161,0.755,162,2.398,163,1.595,164,0.755,165,2.051,166,0.755,167,0.755,168,0.755,169,1.588,170,1.852,171,1.248,172,1.852,173,1.588,174,1.095,175,1.937,176,0.585,177,0.755,178,0.755,179,0.755,180,1.248,181,1.248,182,0.755,183,0.755,184,0.755,185,0.755,186,0.662,187,0.755,188,0.755,189,2.61,190,1.248,191,0.662,192,0.755,193,1.595,194,0.755,195,0.755,196,2.676,197,2.049,198,0.755,199,0.662,200,0.755,201,0.755,202,1.595,203,0.755,204,0.755,205,0.755,206,1.248,207,0.755,208,0.755,209,0.755,210,1.399,211,2.337,212,0.755,213,0.755,214,0.755,215,0.755,216,2.208,217,0.755,218,0.755,219,0.755,220,2.222,221,0.755,222,0.755,223,0.755,224,0.755,225,1.852,226,2.734,227,1.852,228,1.852,229,2.443,230,0.662,231,0.755,232,1.248,233,0.755,234,0.755,235,3.178,236,2.785,237,1.852,238,2.051,239,2.337,240,1.248,241,1.248,242,2.443,243,1.852,244,1.248,245,1.248,246,1.852,247,0.755,248,1.852,249,1.852,250,1.852,251,0.755,252,1.852,253,1.248,254,1.248,255,0.755,256,0.755,257,0.755,258,0.755,259,0.755,260,0.755,261,0.755,262,0.755,263,1.852,264,0.755,265,0.755,266,0.755,267,1.595,268,1.852,269,1.248,270,1.399,271,0.755,272,0.755,273,0.755,274,0.755,275,0.755,276,0.755,277,1.595,278,1.595,279,0.755,280,2.443,281,1.248,282,1.248,283,1.248,284,1.248,285,1.248,286,1.248,287,1.248,288,0.755,289,0.755,290,0.755,291,0.755,292,0.755,293,0.755,294,2.61,295,0.755,296,1.248,297,2.676,298,1.248,299,2.051,300,1.248,301,2.051,302,1.248,303,2.208,304,1.595,305,1.248,306,1.248,307,0.755,308,0.755,309,0.755,310,0.662,311,0.755,312,0.755,313,0.755,314,1.595,315,0.755,316,0.755,317,1.852,318,0.755,319,2.208,320,0.755,321,0.755,322,1.595,323,1.248,324,1.248,325,1.248,326,1.248,327,1.248,328,0.755,329,1.248,330,1.248,331,1.248,332,1.248,333,1.248,334,1.595,335,1.595,336,0.755,337,0.755,338,0.755,339,0.755,340,1.248,341,0.755,342,0.755,343,0.755,344,0.755,345,1.595,346,1.248,347,0.755,348,0.755,349,0.755,350,0.755,351,1.248,352,0.755,353,1.248,354,1.248,355,0.755,356,0.755,357,0.755,358,0.755,359,0.755,360,0.755,361,0.755,362,0.755,363,0.755,364,0.755,365,0.755,366,0.755,367,0.755,368,0.755,369,0.755,370,0.755]],["title/interfaces/IDataBaseObj.html",[125,0.07,371,0.915]],["body/interfaces/IDataBaseObj.html",[2,0.582,3,0.582,8,0.403,12,3.271,20,0.582,21,0.941,36,0.046,37,1.076,38,0.697,39,1.076,52,1.083,64,0.49,99,0.039,100,0.039,125,0.127,128,2.109,132,2.388,135,2.526,139,1.358,174,2.109,270,2.109,371,1.561,372,3.271,373,4.024,374,4.024,375,3.271,376,3.271,377,2.195,378,4.819,379,4.819]],["title/interfaces/ITBCompany.html",[125,0.07,380,1.689]],["body/interfaces/ITBCompany.html",[2,0.538,3,0.538,8,0.372,10,1.527,20,0.538,21,0.897,36,0.047,37,1.195,38,0.721,39,1.217,44,1.722,46,0.897,52,1.104,56,0.897,64,0.559,65,0.157,66,0.944,99,0.037,100,0.037,125,0.113,139,0.944,154,0.726,155,1.068,371,1.614,377,1.527,380,3.111,381,2.565,382,2.126,383,2.476,384,3.196,385,2.41,386,1.722,387,1.722,388,1.527,389,2.223,390,1.722,391,1.722,392,1.722,393,1.722]],["title/interfaces/ITBSeller.html",[125,0.07,394,1.689]],["body/interfaces/ITBSeller.html",[2,0.538,3,0.538,8,0.372,10,1.527,20,0.538,21,0.897,36,0.047,37,1.195,38,0.721,39,1.217,46,0.897,50,1.722,52,1.104,56,0.897,64,0.559,65,0.157,66,0.944,99,0.037,100,0.037,125,0.113,139,0.944,154,0.726,155,1.068,371,1.614,377,1.527,382,2.126,383,2.476,384,3.196,385,2.41,386,1.722,387,1.722,388,1.527,389,2.223,390,1.722,391,1.722,392,1.722,393,1.722,394,3.111,395,2.565]],["title/interfaces/ITeddyBear.html",[125,0.07,396,1.689]],["body/interfaces/ITeddyBear.html",[2,0.489,3,0.489,8,0.339,10,1.39,20,0.489,21,0.845,36,0.047,37,1.162,38,0.816,39,1.271,46,0.845,48,1.567,52,1.124,56,0.845,64,0.527,65,0.143,66,0.86,99,0.035,100,0.035,125,0.107,139,0.86,154,0.661,155,0.973,371,1.546,377,1.39,382,2.005,383,2.408,385,2.535,386,1.567,387,1.567,388,1.39,390,1.567,391,1.567,392,1.567,393,1.567,396,3.007,397,2.335,398,4.228,399,4.228,400,4.228,401,4.228,402,4.091,403,2.752]],["title/interfaces/LoadingMap.html",[125,0.07,173,1.308]],["body/interfaces/LoadingMap.html",[0,1.252,2,0.183,3,0.183,8,0.127,15,0.663,20,0.183,21,0.247,30,0.461,32,0.461,33,1.004,36,0.048,37,0.467,38,0.302,39,0.283,41,2.348,46,0.247,52,0.853,53,0.519,55,1.236,56,0.721,57,0.461,59,0.586,64,0.154,65,0.145,66,1.249,74,1.937,75,2.05,82,1.625,99,0.017,100,0.017,115,1.096,118,0.663,125,0.108,126,2.074,127,0.663,128,0.663,129,1.596,130,2.707,131,0.756,132,1.963,133,1.249,134,2.051,135,1.937,136,2.444,137,2.941,138,2.941,139,0.939,141,1.249,142,1.249,143,1.249,144,2.444,145,0.967,146,2.209,147,2.398,148,1.249,149,0.756,150,0.756,151,0.756,152,0.967,153,0.756,154,0.247,155,1.062,156,2.209,157,0.756,158,0.756,159,0.756,160,1.596,161,0.756,162,2.398,163,1.596,164,0.756,165,2.051,166,0.756,167,0.756,168,0.756,169,1.589,170,2.209,171,1.596,172,2.051,173,1.711,174,1.095,175,1.937,176,0.586,177,0.756,178,0.756,179,0.756,180,1.249,181,1.249,182,0.756,183,0.756,184,0.756,185,0.756,186,0.663,187,0.756,188,0.756,189,2.611,190,1.249,191,0.663,192,0.756,193,1.596,194,0.756,195,0.756,196,2.677,197,2.05,198,0.756,199,0.663,200,0.756,201,0.756,202,1.596,203,0.756,204,0.756,205,0.756,206,1.249,207,0.756,208,0.756,209,0.756,210,1.399,211,2.337,212,0.756,213,0.756,214,0.756,215,0.756,216,2.209,217,0.756,218,0.756,219,0.756,220,2.222,221,0.756,222,0.756,223,0.756,224,0.756,225,1.853,226,2.735,227,1.853,228,1.853,229,2.444,230,0.663,231,0.756,232,1.249,233,0.756,234,0.756,235,3.178,236,2.786,237,1.853,238,2.051,239,2.337,240,1.249,241,1.249,242,2.444,243,1.853,244,1.249,245,1.249,246,1.853,247,0.756,248,1.853,249,1.853,250,1.853,251,0.756,252,1.853,253,1.249,254,1.249,255,0.756,256,0.756,257,0.756,258,0.756,259,0.756,260,0.756,261,0.756,262,0.756,263,1.853,264,0.756,265,0.756,266,0.756,267,1.596,268,1.853,269,1.249,270,1.399,271,0.756,272,0.756,273,0.756,274,0.756,275,0.756,276,0.756,277,1.596,278,1.596,279,0.756,280,2.444,281,1.249,282,1.249,283,1.249,284,1.249,285,1.249,286,1.249,287,1.249,288,0.756,289,0.756,290,0.756,291,0.756,292,0.756,293,0.756,294,2.611,295,0.756,296,1.249,297,2.677,298,1.249,299,2.051,300,1.249,301,2.051,302,1.249,303,2.209,304,1.596,305,1.249,306,1.249,307,0.756,308,0.756,309,0.756,310,0.663,311,0.756,312,0.756,313,0.756,314,1.596,315,0.756,316,0.756,317,1.853,318,0.756,319,2.209,320,0.756,321,0.756,322,1.596,323,1.249,324,1.249,325,1.249,326,1.249,327,1.249,328,0.756,329,1.249,330,1.249,331,1.249,332,1.249,333,1.249,334,1.596,335,1.596,336,0.756,337,0.756,338,0.756,339,0.756,340,1.249,341,0.756,342,0.756,343,0.756,344,0.756,345,1.596,346,1.249,347,0.756,348,0.756,349,0.756,350,0.756,351,1.249,352,0.756,353,1.249,354,1.249,355,0.756,356,0.756,357,0.756,358,0.756,359,0.756,360,0.756,361,0.756,362,0.756,363,0.756,364,0.756,365,0.756,366,0.756,367,0.756,368,0.756,369,0.756,370,0.756,404,1.265]],["title/modules/MaterialModule.html",[101,1.16,112,1.481]],["body/modules/MaterialModule.html",[2,0.498,3,0.498,8,0.345,36,0.046,56,0.939,57,1.256,64,0.533,65,0.145,99,0.035,100,0.035,101,1.414,106,2.059,112,2.295,119,3.559,405,3.445,406,4.814,407,4.814,408,4.814,409,4.814,410,4.814,411,4.814,412,4.814,413,4.814,414,4.814,415,4.814,416,4.814,417,4.814,418,5.065,419,4.814,420,4.814,421,4.814,422,4.814,423,4.814,424,4.814,425,4.814,426,4.814,427,4.814,428,4.814,429,4.814,430,4.814,431,4.814,432,4.814,433,4.379,434,4.814,435,4.814,436,4.814,437,4.814,438,4.814,439,4.814,440,2.801,441,3.445,442,3.445,443,3.445]],["title/interfaces/SubjectMap.html",[125,0.07,169,1.308]],["body/interfaces/SubjectMap.html",[0,1.243,2,0.18,3,0.18,8,0.125,15,0.654,20,0.18,21,0.244,30,0.455,32,0.455,33,1.104,36,0.048,37,0.462,38,0.382,39,0.279,41,2.337,46,0.244,52,0.849,53,0.512,55,1.577,56,0.717,57,0.455,59,0.578,64,0.152,65,0.144,66,1.246,74,2.132,75,2.038,82,1.612,99,0.017,100,0.017,115,1.086,118,0.654,125,0.107,126,2.065,127,0.654,128,0.654,129,1.581,130,2.731,131,0.746,132,2.013,133,1.581,134,1.838,135,1.786,136,2.195,137,2.932,138,2.932,139,0.932,141,1.235,142,1.235,143,1.235,144,2.431,145,0.957,146,2.195,147,2.571,148,1.235,149,0.746,150,0.746,151,0.746,152,1.224,153,0.746,154,0.244,155,1.055,156,2.195,157,1.235,158,1.235,159,1.235,160,1.838,161,1.235,162,2.434,163,1.838,164,1.235,165,2.195,166,1.235,167,1.235,168,1.235,169,1.7,170,1.838,171,1.235,172,1.838,173,1.577,174,1.083,175,1.925,176,0.578,177,0.746,178,0.746,179,0.746,180,1.235,181,1.235,182,0.746,183,0.746,184,0.746,185,0.746,186,0.654,187,0.746,188,0.746,189,2.598,190,1.235,191,0.654,192,0.746,193,1.581,194,0.746,195,0.746,196,2.665,197,2.038,198,0.746,199,0.654,200,0.746,201,0.746,202,1.581,203,0.746,204,0.746,205,0.746,206,1.235,207,0.746,208,0.746,209,0.746,210,1.386,211,2.324,212,0.746,213,0.746,214,0.746,215,0.746,216,2.195,217,0.746,218,0.746,219,0.746,220,2.211,221,0.746,222,0.746,223,0.746,224,0.746,225,1.838,226,2.724,227,1.838,228,1.838,229,2.431,230,0.654,231,0.746,232,1.235,233,0.746,234,0.746,235,3.172,236,2.775,237,1.838,238,2.036,239,2.324,240,1.235,241,1.235,242,2.431,243,1.838,244,1.235,245,1.235,246,1.838,247,0.746,248,1.838,249,1.838,250,1.838,251,0.746,252,1.838,253,1.235,254,1.235,255,0.746,256,0.746,257,0.746,258,0.746,259,0.746,260,0.746,261,0.746,262,0.746,263,1.838,264,0.746,265,0.746,266,0.746,267,1.581,268,1.838,269,1.235,270,1.386,271,0.746,272,0.746,273,0.746,274,0.746,275,0.746,276,0.746,277,1.581,278,1.581,279,0.746,280,2.431,281,1.235,282,1.235,283,1.235,284,1.235,285,1.235,286,1.235,287,1.235,288,0.746,289,0.746,290,0.746,291,0.746,292,0.746,293,0.746,294,2.598,295,0.746,296,1.235,297,2.665,298,1.235,299,2.036,300,1.235,301,2.036,302,1.235,303,2.195,304,1.581,305,1.235,306,1.235,307,0.746,308,0.746,309,0.746,310,0.654,311,0.746,312,0.746,313,0.746,314,1.581,315,0.746,316,0.746,317,1.838,318,0.746,319,2.195,320,0.746,321,0.746,322,1.581,323,1.235,324,1.235,325,1.235,326,1.235,327,1.235,328,0.746,329,1.235,330,1.235,331,1.235,332,1.235,333,1.235,334,1.581,335,1.581,336,0.746,337,0.746,338,0.746,339,0.746,340,1.235,341,0.746,342,0.746,343,0.746,344,0.746,345,1.581,346,1.235,347,0.746,348,0.746,349,0.746,350,0.746,351,1.235,352,0.746,353,1.235,354,1.235,355,0.746,356,0.746,357,0.746,358,0.746,359,0.746,360,0.746,361,0.746,362,0.746,363,0.746,364,0.746,365,0.746,366,0.746,367,0.746,368,0.746,369,0.746,370,0.746,444,1.248,445,1.248]],["title/classes/TBCompany.html",[44,1.308,65,0.119]],["body/classes/TBCompany.html",[2,0.498,3,0.498,8,0.345,10,1.797,20,0.498,21,0.855,30,1.256,33,1.731,35,2.059,36,0.047,37,1.194,38,0.773,39,1.213,44,2.027,45,1.595,46,0.939,52,1.113,56,0.855,64,0.533,65,0.185,66,0.875,99,0.035,100,0.035,125,0.085,139,1.286,154,0.672,155,0.99,371,1.418,377,2.079,380,3.194,381,2.376,382,1.595,383,2.42,384,3.125,385,2.344,386,1.595,387,1.595,388,1.976,389,2.617,390,2.027,391,1.595,392,1.595,393,1.595,446,4.379,447,2.376,448,3.445,449,3.445,450,3.445,451,3.445]],["title/classes/TBSeller.html",[50,1.308,65,0.119]],["body/classes/TBSeller.html",[2,0.498,3,0.498,8,0.345,10,1.797,20,0.498,21,0.855,30,1.256,33,1.731,35,2.059,36,0.047,37,1.194,38,0.773,39,1.213,45,1.595,46,0.939,50,2.027,52,1.113,56,0.855,64,0.533,65,0.185,66,0.875,99,0.035,100,0.035,125,0.085,139,1.286,154,0.672,155,0.99,371,1.418,377,2.079,382,1.595,383,2.42,384,3.125,385,2.344,386,1.595,387,1.595,388,1.976,389,2.617,390,2.027,391,1.595,392,1.595,393,1.595,394,3.194,395,2.376,447,2.376,452,4.379,453,3.445,454,3.445,455,3.445,456,3.445]],["title/interfaces/TableCRUD.html",[125,0.07,176,1.308]],["body/interfaces/TableCRUD.html",[0,1.125,2,0.181,3,0.181,8,0.126,15,0.657,20,0.181,21,0.518,30,0.457,32,0.457,33,0.86,36,0.048,37,0.464,38,0.494,39,0.28,41,2.341,46,0.245,52,0.825,53,0.852,55,1.428,56,0.719,57,0.457,59,0.581,64,0.153,65,0.144,66,1.247,74,1.929,75,2.042,82,1.617,99,0.017,100,0.017,115,1.09,118,0.657,125,0.11,126,2.248,127,0.657,128,0.657,129,1.586,130,2.703,131,0.75,132,1.957,133,1.24,134,1.843,135,1.791,136,2.2,137,2.935,138,2.935,139,0.868,141,1.24,142,1.24,143,1.24,144,2.436,145,0.961,146,2.2,147,2.392,148,1.24,149,0.75,150,0.75,151,0.75,152,0.961,153,0.75,154,0.245,155,0.981,156,2.042,157,0.75,158,0.75,159,0.75,160,1.586,161,0.75,162,2.392,163,1.586,164,0.75,165,2.042,166,0.75,167,0.75,168,0.75,169,2.016,170,1.843,171,1.24,172,1.843,173,2.016,174,1.391,175,2.042,176,0.961,177,0.75,178,0.75,179,0.75,180,1.24,181,1.24,182,0.75,183,0.75,184,0.75,185,0.75,186,0.657,187,0.75,188,0.75,189,2.603,190,1.24,191,0.657,192,0.75,193,1.586,194,0.75,195,0.75,196,2.67,197,2.042,198,0.75,199,0.657,200,0.75,201,0.75,202,1.586,203,0.75,204,0.75,205,0.75,206,1.24,207,0.75,208,0.75,209,0.75,210,1.391,211,2.329,212,0.75,213,0.75,214,0.75,215,0.75,216,2.2,217,0.75,218,0.75,219,0.75,220,2.215,221,0.75,222,0.75,223,0.75,224,0.75,225,1.843,226,2.728,227,1.843,228,1.843,229,2.436,230,0.657,231,0.75,232,1.24,233,0.75,234,0.75,235,3.174,236,2.779,237,1.843,238,2.042,239,2.329,240,1.24,241,1.24,242,2.436,243,1.843,244,1.24,245,1.24,246,1.843,247,0.75,248,1.843,249,1.843,250,1.843,251,0.75,252,1.843,253,1.24,254,1.24,255,0.75,256,0.75,257,0.75,258,0.75,259,0.75,260,0.75,261,0.75,262,0.75,263,1.843,264,0.75,265,0.75,266,0.75,267,1.586,268,1.843,269,1.24,270,1.391,271,0.75,272,0.75,273,0.75,274,0.75,275,0.75,276,0.75,277,1.586,278,1.586,279,0.75,280,2.436,281,1.24,282,1.24,283,1.24,284,1.24,285,1.24,286,1.24,287,1.24,288,0.75,289,0.75,290,0.75,291,0.75,292,0.75,293,0.75,294,2.603,295,0.75,296,1.24,297,2.67,298,1.24,299,2.042,300,1.24,301,2.042,302,1.24,303,2.2,304,1.586,305,1.24,306,1.24,307,0.75,308,0.75,309,0.75,310,0.657,311,0.75,312,0.75,313,0.75,314,1.586,315,0.75,316,0.75,317,1.843,318,0.75,319,2.2,320,0.75,321,0.75,322,1.586,323,1.24,324,1.24,325,1.24,326,1.24,327,1.24,328,0.75,329,1.24,330,1.24,331,1.24,332,1.24,333,1.24,334,1.586,335,1.586,336,0.75,337,0.75,338,0.75,339,0.75,340,1.24,341,0.75,342,0.75,343,0.75,344,0.75,345,1.586,346,1.24,347,0.75,348,0.75,349,0.75,350,0.75,351,1.24,352,0.75,353,1.24,354,1.24,355,0.75,356,0.75,357,0.75,358,0.75,359,0.75,360,0.75,361,0.75,362,0.75,363,0.75,364,0.75,365,0.75,366,0.75,367,0.75,368,0.75,369,0.75,370,0.75]],["title/classes/TableMap.html",[65,0.119,154,0.552]],["body/classes/TableMap.html",[2,0.561,3,0.561,8,0.388,20,0.561,21,0.92,24,3.833,26,3.833,33,1.645,36,0.046,38,0.734,44,2.445,45,2.351,46,0.991,48,2.548,50,2.445,52,1.074,64,0.472,65,0.199,99,0.038,100,0.038,154,0.92,388,2.324,457,4.294,458,3.155,459,3.881,460,3.881,461,3.881]],["title/classes/TeddyBear.html",[48,1.308,65,0.119]],["body/classes/TeddyBear.html",[2,0.461,3,0.461,8,0.319,10,1.71,20,0.461,21,0.813,30,1.162,33,1.787,35,1.905,36,0.047,37,1.169,38,0.82,39,0.712,45,1.476,46,0.905,48,1.928,52,1.127,56,0.813,64,0.507,65,0.176,66,0.809,99,0.034,100,0.034,125,0.079,139,1.249,154,0.622,155,0.916,371,1.349,377,2.019,382,1.476,383,2.362,385,2.504,386,1.476,387,1.476,388,1.904,390,1.928,391,1.476,392,1.476,393,1.476,396,3.128,397,2.199,398,4.149,399,4.149,400,4.149,401,4.149,402,3.999,403,3.386,447,2.199,462,4.165,463,3.188,464,3.188,465,3.188,466,3.188,467,3.188,468,3.188,469,3.188,470,3.188]],["title/coverage.html",[471,3.125]],["body/coverage.html",[0,1.333,1,1.917,8,0.366,9,2.973,32,1.333,36,0.047,38,0.529,44,1.693,48,1.693,50,1.693,65,0.218,99,0.037,100,0.037,125,0.137,126,1.693,127,2.789,132,1.693,145,1.693,152,2.104,154,0.714,162,1.917,169,1.693,173,1.693,176,1.693,371,1.184,372,2.973,380,2.185,381,3.135,394,2.185,395,3.135,396,2.185,397,3.135,457,2.973,458,2.973,471,2.973,472,2.973,473,3.657,474,3.657,475,5.644,476,4.546,477,4.546,478,4.947,479,3.657,480,3.657,481,3.657,482,3.657,483,3.657,484,4.947,485,4.947,486,3.657,487,3.657,488,2.973,489,3.135,490,4.546,491,2.973,492,3.657]],["title/dependencies.html",[103,2.029,493,2.367]],["body/dependencies.html",[36,0.047,53,1.655,57,1.47,59,1.866,99,0.039,100,0.039,103,2.41,105,2.781,121,3.922,122,3.328,440,3.278,494,4.032,495,4.032,496,4.032,497,4.825,498,4.032,499,5.66,500,4.032,501,4.032,502,4.032,503,4.032,504,4.032,505,4.032,506,4.032,507,4.032,508,4.032,509,4.032,510,4.032,511,4.032,512,4.032,513,4.032,514,4.032]],["title/index.html",[20,0.342,515,1.924,516,1.924]],["body/index.html",[36,0.042,53,1.857,54,3.678,55,2.094,99,0.042,100,0.042]],["title/license.html",[515,1.924,516,1.924,517,1.924]],["body/license.html",[8,0.376,36,0.037,99,0.037,100,0.037,106,2.244,115,1.541,147,1.968,175,2.422,186,1.968,191,1.968,199,1.968,210,1.968,230,2.422,310,2.737,376,4.069,472,3.052,517,3.052,518,3.755,519,5.006,520,3.755,521,3.755,522,3.755,523,4.621,524,3.755,525,3.755,526,3.755,527,3.755,528,4.621,529,3.755,530,5.631,531,3.755,532,4.621,533,5.006,534,3.755,535,3.755,536,3.755,537,3.755,538,3.755,539,3.755,540,3.755,541,3.755,542,3.755,543,3.755,544,3.755,545,3.755,546,4.621,547,4.621,548,3.755,549,3.755,550,4.621,551,3.755,552,3.755,553,3.755,554,3.755,555,3.755,556,3.755,557,3.755,558,3.755,559,3.755,560,3.755,561,3.755,562,3.755,563,3.755,564,3.755,565,3.755,566,3.755,567,3.755,568,3.755,569,3.755,570,3.755]],["title/modules.html",[101,1.578]],["body/modules.html",[36,0.041,99,0.041,100,0.041,101,1.828,102,2.661,112,2.333,122,3.071,375,3.619,571,4.453,572,4.453,573,5.114,574,4.453]],["title/overview.html",[575,3.125]],["body/overview.html",[0,1.479,1,2.946,32,1.888,36,0.045,64,0.494,65,0.171,92,2.798,99,0.039,100,0.039,101,1.988,102,3.407,103,2.424,104,3.298,105,2.798,106,2.424,107,3.298,108,3.298,109,3.298,110,3.298,111,3.298,112,2.713,113,3.937,114,3.298,115,1.665,125,0.1,145,1.878,575,3.298,576,4.057,577,4.843,578,4.057,579,4.057]],["title/miscellaneous/variables.html",[489,2.342,580,1.924]],["body/miscellaneous/variables.html",[20,0.607,36,0.046,38,0.714,45,2.287,46,0.964,99,0.04,100,0.04,130,2.841,152,2.594,197,2.199,220,2.199,488,3.411,489,2.894,491,3.411,580,3.411,581,4.196,582,4.196,583,4.94,584,4.196,585,4.196]]],"invertedIndex":[["",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":577,"title":{},"body":{"overview.html":{}}}],["1/1",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":576,"title":{},"body":{"overview.html":{}}}],["2.0.8",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":521,"title":{},"body":{"license.html":{}}}],["25",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":578,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["4.1.3",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["4/22",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["7.0.4",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":579,"title":{},"body":{"overview.html":{}}}],["_base",{"_index":387,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["abov",{"_index":545,"title":{},"body":{"license.html":{}}}],["accordingli",{"_index":348,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["action",{"_index":565,"title":{},"body":{"license.html":{}}}],["actual_compon",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["ag",{"_index":398,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{}}}],["again",{"_index":369,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["against",{"_index":227,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["and/or",{"_index":539,"title":{},"body":{"license.html":{}}}],["angular",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["angular/anim",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["angular/compil",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"dependencies.html":{}}}],["angular/form",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":440,"title":{},"body":{"modules/MaterialModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":14,"title":{},"body":{"components/AppComponent.html":{}}}],["app.compon",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"coverage.html":{},"overview.html":{}}}],["append",{"_index":232,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["appli",{"_index":181,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["applic",{"_index":157,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["application/json",{"_index":185,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["appmodul",{"_index":102,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["aris",{"_index":569,"title":{},"body":{"license.html":{}}}],["array",{"_index":133,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["assign",{"_index":276,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["associ",{"_index":531,"title":{},"body":{"license.html":{}}}],["auth",{"_index":187,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["author",{"_index":186,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["avail",{"_index":375,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"modules.html":{}}}],["away",{"_index":200,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["backend",{"_index":351,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["bad",{"_index":365,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["base",{"_index":217,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["be",{"_index":209,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["bear",{"_index":86,"title":{},"body":{"components/AppComponent.html":{}}}],["befor",{"_index":327,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["bodi",{"_index":354,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["boolean",{"_index":170,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["bootstrap",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["brows",{"_index":573,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":228,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["c",{"_index":520,"title":{},"body":{"license.html":{}}}],["cach",{"_index":126,"title":{"interfaces/Cache.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["cacheandnotifycreated(model",{"_index":289,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["cacheandnotifydelete(model",{"_index":336,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["cacheandnotifyread(model",{"_index":262,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["cacheandnotifyupdated(model",{"_index":309,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["call",{"_index":194,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["catcherror",{"_index":149,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["catcherror(this.handlehttperror",{"_index":249,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["charg",{"_index":527,"title":{},"body":{"license.html":{}}}],["claim",{"_index":562,"title":{},"body":{"license.html":{}}}],["class",{"_index":65,"title":{"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"overview.html":{}}}],["client",{"_index":342,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["clue",{"_index":356,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["cluster_appmodul",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":353,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["collect",{"_index":378,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["compani",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["company.nam",{"_index":89,"title":{},"body":{"components/AppComponent.html":{}}}],["companykey",{"_index":399,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["component_templ",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["condit",{"_index":544,"title":{},"body":{"license.html":{}}}],["connect",{"_index":570,"title":{},"body":{"license.html":{}}}],["console.error",{"_index":359,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["console.error('an",{"_index":349,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["console.error(err",{"_index":83,"title":{},"body":{"components/AppComponent.html":{}}}],["const",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["construct",{"_index":225,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["constructor(d",{"_index":31,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(prop",{"_index":390,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["constructor(publ",{"_index":441,"title":{},"body":{"modules/MaterialModule.html":{}}}],["contain",{"_index":355,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["content",{"_index":184,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["contract",{"_index":566,"title":{},"body":{"license.html":{}}}],["copi",{"_index":310,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["copyobjtoupd",{"_index":301,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["copyright",{"_index":519,"title":{},"body":{"license.html":{}}}],["core",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":214,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["coverag",{"_index":471,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":269,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["create(model",{"_index":279,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["createbulk",{"_index":292,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["createobs(model",{"_index":288,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["createsearchparams(queri",{"_index":251,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["crud",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"index.html":{}}}],["damag",{"_index":563,"title":{},"body":{"license.html":{}}}],["data",{"_index":135,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["databas",{"_index":270,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["dataservic",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":385,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["datecr",{"_index":383,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["dateobtain",{"_index":400,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{}}}],["db",{"_index":156,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["deal",{"_index":532,"title":{},"body":{"license.html":{}}}],["declar",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}}}],["definit",{"_index":224,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["delet",{"_index":317,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["delete(model",{"_index":321,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["deletebulk",{"_index":338,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["deleteobs(model",{"_index":328,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["depend",{"_index":103,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":373,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["descript",{"_index":128,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["despit",{"_index":201,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["determin",{"_index":190,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["direct",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["display",{"_index":207,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["distribut",{"_index":537,"title":{},"body":{"license.html":{}}}],["document",{"_index":472,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":332,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["ds",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["dynam",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"dependencies.html":{},"index.html":{}}}],["each",{"_index":168,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["el.key",{"_index":299,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["element",{"_index":94,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":138,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["endpoint",{"_index":178,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["environ",{"_index":152,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.serverurl",{"_index":179,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["environments/environ",{"_index":153,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["err",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["error",{"_index":345,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["error.error",{"_index":340,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["error.error.messag",{"_index":350,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["error.statu",{"_index":360,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["errorev",{"_index":341,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["event",{"_index":559,"title":{},"body":{"license.html":{}}}],["everyth",{"_index":331,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["exampl",{"_index":84,"title":{},"body":{"components/AppComponent.html":{}}}],["expect",{"_index":174,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["export",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"overview.html":{}}}],["express",{"_index":552,"title":{},"body":{"license.html":{}}}],["extend",{"_index":382,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["extern",{"_index":171,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["fa",{"_index":443,"title":{},"body":{"modules/MaterialModule.html":{}}}],["face",{"_index":362,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["faker",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["fals",{"_index":220,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":374,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["figur",{"_index":212,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"license.html":{}}}],["filter",{"_index":330,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["find",{"_index":296,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["fit",{"_index":555,"title":{},"body":{"license.html":{}}}],["follow",{"_index":543,"title":{},"body":{"license.html":{}}}],["forkjoin",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["forkjoin([tblistob",{"_index":73,"title":{},"body":{"components/AppComponent.html":{}}}],["free",{"_index":526,"title":{},"body":{"license.html":{}}}],["fron",{"_index":318,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["front",{"_index":137,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["frontend",{"_index":267,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["furnish",{"_index":542,"title":{},"body":{"license.html":{}}}],["gener",{"_index":274,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["get",{"_index":515,"title":{"index.html":{},"license.html":{}},"body":{}}],["grant",{"_index":525,"title":{},"body":{"license.html":{}}}],["graph",{"_index":574,"title":{},"body":{"modules.html":{}}}],["hammerj",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["handl",{"_index":347,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["handlehttperror(error",{"_index":339,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["happen",{"_index":366,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["header",{"_index":180,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["herebi",{"_index":524,"title":{},"body":{"license.html":{}}}],["holder",{"_index":560,"title":{},"body":{"license.html":{}}}],["html",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":193,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["http://localhost:3000",{"_index":585,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":141,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpclientmodul",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorrespons",{"_index":142,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpheader",{"_index":143,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpopt",{"_index":237,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpoption",{"_index":183,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpopts.param",{"_index":240,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["httpparam",{"_index":144,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["icon",{"_index":208,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["id",{"_index":377,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["idatabaseobj",{"_index":371,"title":{"interfaces/IDataBaseObj.html":{}},"body":{"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{},"coverage.html":{}}}],["identifi",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["impli",{"_index":553,"title":{},"body":{"license.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["includ",{"_index":376,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"license.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"miscellaneous/variables.html":{}}}],["individu",{"_index":167,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}}}],["inject",{"_index":145,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{},"overview.html":{}}}],["instanceof",{"_index":253,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["interfac",{"_index":125,"title":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"overview.html":{}}}],["interface'",{"_index":223,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["isoptimist",{"_index":203,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["itbcompani",{"_index":380,"title":{"interfaces/ITBCompany.html":{}},"body":{"interfaces/ITBCompany.html":{},"classes/TBCompany.html":{},"coverage.html":{}}}],["itbsel",{"_index":394,"title":{"interfaces/ITBSeller.html":{}},"body":{"interfaces/ITBSeller.html":{},"classes/TBSeller.html":{},"coverage.html":{}}}],["iteddybear",{"_index":396,"title":{"interfaces/ITeddyBear.html":{}},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{},"coverage.html":{}}}],["js",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["key",{"_index":277,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["keyvalpair",{"_index":258,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["keyvalpair[1",{"_index":261,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["kind",{"_index":551,"title":{},"body":{"license.html":{}}}],["later",{"_index":370,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["legend",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["liabil",{"_index":564,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":561,"title":{},"body":{"license.html":{}}}],["licens",{"_index":517,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":230,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["liter",{"_index":444,"title":{},"body":{"interfaces/SubjectMap.html":{}}}],["load",{"_index":136,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["loadingmap",{"_index":173,"title":{"interfaces/LoadingMap.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["local",{"_index":311,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["localobjtoupd",{"_index":297,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["locat",{"_index":384,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{}}}],["make",{"_index":213,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["mani",{"_index":160,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["map",{"_index":155,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["map.t",{"_index":458,"title":{},"body":{"classes/TableMap.html":{},"coverage.html":{}}}],["map.ts:2",{"_index":461,"title":{},"body":{"classes/TableMap.html":{}}}],["map.ts:3",{"_index":459,"title":{},"body":{"classes/TableMap.html":{}}}],["map.ts:4",{"_index":460,"title":{},"body":{"classes/TableMap.html":{}}}],["matautocompletemodul",{"_index":406,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttonmodul",{"_index":407,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matbuttontogglemodul",{"_index":408,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matcardmodul",{"_index":409,"title":{},"body":{"modules/MaterialModule.html":{}}}],["match",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matcheckboxmodul",{"_index":410,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matchipsmodul",{"_index":411,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdatepickermodul",{"_index":412,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matdialogmodul",{"_index":413,"title":{},"body":{"modules/MaterialModule.html":{}}}],["material.modul",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["materialmodul",{"_index":112,"title":{"modules/MaterialModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["matexpansionmodul",{"_index":414,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matformfieldmodul",{"_index":415,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matgridlistmodul",{"_index":416,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonmodul",{"_index":417,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistri",{"_index":418,"title":{},"body":{"modules/MaterialModule.html":{}}}],["maticonregistry.registerfontclassalias('fontawesom",{"_index":442,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matinputmodul",{"_index":419,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matlistmodul",{"_index":420,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matmenumodul",{"_index":421,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matnativedatemodul",{"_index":422,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matpaginatormodul",{"_index":423,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressbarmodul",{"_index":424,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matprogressspinnermodul",{"_index":425,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matradiomodul",{"_index":426,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matripplemodul",{"_index":427,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matselectmodul",{"_index":428,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsidenavmodul",{"_index":429,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidermodul",{"_index":430,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matslidetogglemodul",{"_index":431,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarmodul",{"_index":432,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsnackbarref",{"_index":433,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsortmodul",{"_index":434,"title":{},"body":{"modules/MaterialModule.html":{}}}],["matsteppermodul",{"_index":435,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattablemodul",{"_index":436,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattabsmodul",{"_index":437,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattoolbarmodul",{"_index":438,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mattooltipmodul",{"_index":439,"title":{},"body":{"modules/MaterialModule.html":{}}}],["mean",{"_index":198,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["merchant",{"_index":554,"title":{},"body":{"license.html":{}}}],["merg",{"_index":535,"title":{},"body":{"license.html":{}}}],["messag",{"_index":363,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["metadata",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/IDataBaseObj.html":{}}}],["method",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["miscellan",{"_index":580,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":518,"title":{},"body":{"license.html":{}}}],["model",{"_index":216,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["model(el",{"_index":266,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["model(objtocr",{"_index":281,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["models/tbcompani",{"_index":60,"title":{},"body":{"components/AppComponent.html":{}}}],["models/tbsel",{"_index":61,"title":{},"body":{"components/AppComponent.html":{}}}],["models/teddybear",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["modifi",{"_index":210,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["modul",{"_index":101,"title":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["need",{"_index":271,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["network",{"_index":344,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["new",{"_index":162,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["newmodelobj",{"_index":280,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["newmodelobj.key",{"_index":283,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["newparam",{"_index":252,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["ngmodul",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{}}}],["ngoninit",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["noninfring",{"_index":558,"title":{},"body":{"license.html":{}}}],["notic",{"_index":546,"title":{},"body":{"license.html":{}}}],["notif",{"_index":159,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["notifi",{"_index":206,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["notifyon",{"_index":320,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["number",{"_index":402,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{}}}],["object",{"_index":130,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/variables.html":{}}}],["object'",{"_index":293,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["object.assign",{"_index":238,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["object.assign(copyobjtoupd",{"_index":302,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["object.assign(localobjtoupd",{"_index":313,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["object.keys(props).foreach(prop",{"_index":391,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["object.keys(tablemap).foreach(tablenam",{"_index":218,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtocr",{"_index":278,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtodelet",{"_index":319,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtodelete.id",{"_index":325,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtodelete.key",{"_index":335,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtoupd",{"_index":294,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["objtoupdate.key",{"_index":300,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["observ",{"_index":146,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["obtain",{"_index":529,"title":{},"body":{"license.html":{}}}],["occur",{"_index":346,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["on",{"_index":163,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["oninit",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["optimist",{"_index":314,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["optimst",{"_index":192,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["option",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["order",{"_index":205,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["origin",{"_index":401,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{}}}],["otherwis",{"_index":568,"title":{},"body":{"license.html":{}}}],["out",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":575,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":493,"title":{"dependencies.html":{}},"body":{}}],["paddingtonthebear",{"_index":522,"title":{},"body":{"license.html":{}}}],["param",{"_index":189,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["param.split",{"_index":259,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["paramet",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["particular",{"_index":556,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":523,"title":{},"body":{"license.html":{}}}],["permit",{"_index":541,"title":{},"body":{"license.html":{}}}],["person",{"_index":528,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":248,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["pleas",{"_index":367,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["portion",{"_index":549,"title":{},"body":{"license.html":{}}}],["post",{"_index":272,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["privat",{"_index":211,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["product",{"_index":583,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prop",{"_index":447,"title":{},"body":{"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["properti",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}}}],["props[prop",{"_index":392,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["provid",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/MaterialModule.html":{},"license.html":{},"overview.html":{}}}],["providedin",{"_index":177,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["public",{"_index":22,"title":{},"body":{"components/AppComponent.html":{}}}],["publish",{"_index":536,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":557,"title":{},"body":{"license.html":{}}}],["queri",{"_index":226,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["query.split",{"_index":256,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["re",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["read",{"_index":233,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["read(model",{"_index":234,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["readobs(model",{"_index":247,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["receiv",{"_index":161,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["refer",{"_index":312,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["remov",{"_index":329,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["request",{"_index":182,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["res.foreach((el",{"_index":264,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["res.id",{"_index":286,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["res.key",{"_index":284,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["res.objectid",{"_index":285,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["res[0",{"_index":77,"title":{},"body":{"components/AppComponent.html":{}}}],["res[1",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["res[2",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resolut",{"_index":273,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["respons",{"_index":229,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["restrict",{"_index":534,"title":{},"body":{"license.html":{}}}],["result",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["right",{"_index":199,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["root",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["rxj",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":151,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["same",{"_index":333,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["searchparam",{"_index":254,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["searchparams.set(keyvalpair[0",{"_index":260,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["selector",{"_index":13,"title":{},"body":{"components/AppComponent.html":{}}}],["sell",{"_index":540,"title":{},"body":{"license.html":{}}}],["seller",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["seller.nam",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["send",{"_index":158,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["server",{"_index":202,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["serverurl",{"_index":584,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shall",{"_index":547,"title":{},"body":{"license.html":{}}}],["shared/data.servic",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["shared/t",{"_index":386,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["side",{"_index":343,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["simpl",{"_index":129,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["singl",{"_index":164,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["softwar",{"_index":530,"title":{},"body":{"license.html":{}}}],["someth",{"_index":364,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"modules/MaterialModule.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}}}],["splitqueri",{"_index":255,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["splitquery.foreach(param",{"_index":257,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["spread",{"_index":166,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["src/.../environment.prod.t",{"_index":581,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":582,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.t",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":47,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":40,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/material.module.t",{"_index":405,"title":{},"body":{"modules/MaterialModule.html":{}}}],["src/app/models/_base.t",{"_index":372,"title":{},"body":{"interfaces/IDataBaseObj.html":{},"coverage.html":{}}}],["src/app/models/tbcompany.t",{"_index":381,"title":{},"body":{"interfaces/ITBCompany.html":{},"classes/TBCompany.html":{},"coverage.html":{}}}],["src/app/models/tbcompany.ts:11",{"_index":451,"title":{},"body":{"classes/TBCompany.html":{}}}],["src/app/models/tbcompany.ts:13",{"_index":448,"title":{},"body":{"classes/TBCompany.html":{}}}],["src/app/models/tbcompany.ts:15",{"_index":450,"title":{},"body":{"classes/TBCompany.html":{}}}],["src/app/models/tbcompany.ts:16",{"_index":449,"title":{},"body":{"classes/TBCompany.html":{}}}],["src/app/models/tbcompany.ts:17",{"_index":446,"title":{},"body":{"classes/TBCompany.html":{}}}],["src/app/models/tbseller.t",{"_index":395,"title":{},"body":{"interfaces/ITBSeller.html":{},"classes/TBSeller.html":{},"coverage.html":{}}}],["src/app/models/tbseller.ts:11",{"_index":456,"title":{},"body":{"classes/TBSeller.html":{}}}],["src/app/models/tbseller.ts:13",{"_index":453,"title":{},"body":{"classes/TBSeller.html":{}}}],["src/app/models/tbseller.ts:15",{"_index":455,"title":{},"body":{"classes/TBSeller.html":{}}}],["src/app/models/tbseller.ts:16",{"_index":454,"title":{},"body":{"classes/TBSeller.html":{}}}],["src/app/models/tbseller.ts:17",{"_index":452,"title":{},"body":{"classes/TBSeller.html":{}}}],["src/app/models/teddybear.t",{"_index":397,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{},"coverage.html":{}}}],["src/app/models/teddybear.ts:16",{"_index":469,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:18",{"_index":466,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:20",{"_index":467,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:21",{"_index":470,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:22",{"_index":468,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:23",{"_index":463,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:24",{"_index":464,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:25",{"_index":465,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/models/teddybear.ts:27",{"_index":462,"title":{},"body":{"classes/TeddyBear.html":{}}}],["src/app/shared/data.service.t",{"_index":127,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["src/app/shared/data.service.ts:14",{"_index":445,"title":{},"body":{"interfaces/SubjectMap.html":{}}}],["src/app/shared/data.service.ts:24",{"_index":404,"title":{},"body":{"interfaces/LoadingMap.html":{}}}],["src/app/shared/data.service.ts:31",{"_index":140,"title":{},"body":{"interfaces/Cache.html":{}}}],["src/app/shared/t",{"_index":457,"title":{},"body":{"classes/TableMap.html":{},"coverage.html":{}}}],["src/environments/environment.prod.t",{"_index":488,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":516,"title":{"index.html":{},"license.html":{}},"body":{}}],["statement",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":388,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}}}],["stopnotifi",{"_index":322,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["store",{"_index":379,"title":{},"body":{"interfaces/IDataBaseObj.html":{}}}],["string",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{}}}],["style",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["styleurl",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["subject",{"_index":147,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["subjectmap",{"_index":169,"title":{"interfaces/SubjectMap.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["sublicens",{"_index":538,"title":{},"body":{"license.html":{}}}],["subscrib",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["substanti",{"_index":548,"title":{},"body":{"license.html":{}}}],["support",{"_index":571,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":572,"title":{},"body":{"modules.html":{}}}],["system",{"_index":204,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["t",{"_index":235,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tabl",{"_index":132,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["table'",{"_index":134,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tablecrud",{"_index":176,"title":{"interfaces/TableCRUD.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"coverage.html":{}}}],["tablemap",{"_index":154,"title":{"classes/TableMap.html":{}},"body":{"interfaces/Cache.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{}}}],["tablemap.tbcompani",{"_index":389,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{}}}],["tablemap.teddybear",{"_index":403,"title":{},"body":{"interfaces/ITeddyBear.html":{},"classes/TeddyBear.html":{}}}],["tablenam",{"_index":139,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TeddyBear.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":150,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tap((r",{"_index":250,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tbcompani",{"_index":44,"title":{"classes/TBCompany.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ITBCompany.html":{},"classes/TBCompany.html":{},"classes/TableMap.html":{},"coverage.html":{}}}],["tbcompob",{"_index":69,"title":{},"body":{"components/AppComponent.html":{}}}],["tblistob",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["tbseller",{"_index":50,"title":{"classes/TBSeller.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ITBSeller.html":{},"classes/TBSeller.html":{},"classes/TableMap.html":{},"coverage.html":{}}}],["tbsellob",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["teddi",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["teddybear",{"_index":48,"title":{"classes/TeddyBear.html":{}},"body":{"components/AppComponent.html":{},"interfaces/ITeddyBear.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{}}}],["teddybear.nam",{"_index":87,"title":{},"body":{"components/AppComponent.html":{}}}],["teddybearcompani",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"classes/TableMap.html":{}}}],["teddybearlist",{"_index":25,"title":{},"body":{"components/AppComponent.html":{}}}],["teddybearsel",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/TableMap.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["term",{"_index":195,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[model.tablenam",{"_index":263,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[model.tablename].filter(el",{"_index":334,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[model.tablename].find(el",{"_index":298,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[model.tablename].push(new",{"_index":265,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[model.tablename].push(object.assign",{"_index":290,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cache[tablemap[tablenam",{"_index":221,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cacheandnotifycreated(model",{"_index":287,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cacheandnotifydelete(model",{"_index":323,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cacheandnotifyread(model",{"_index":245,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.cacheandnotifyupdated(model",{"_index":304,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.createsearchparams(queri",{"_index":241,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.ds.readobs(tbcompani",{"_index":70,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readobs(tbsel",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["this.ds.readobs(teddybear",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpoint}${model.tablenam",{"_index":243,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.endpoint}${model.tablename}/${localobjtoupdate.key",{"_index":305,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.endpoint}${model.tablename}/${objtodelete.key",{"_index":324,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.handlehttperror(err",{"_index":246,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.http.delete(url",{"_index":326,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.http.get(url",{"_index":244,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.http.patch(url",{"_index":306,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.http.post(url",{"_index":282,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.httpopt",{"_index":239,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.httpoptions).subscrib",{"_index":307,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.isoptimist",{"_index":303,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.loadingmap[model.tablenam",{"_index":236,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.loadingmap[tablemap[tablenam",{"_index":219,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.subjectmap[model.tablename].many.next(this.cache[model.tablenam",{"_index":268,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.subjectmap[model.tablename].one.next(localobjtoupd",{"_index":315,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.subjectmap[model.tablename].one.next(newmodelobj",{"_index":291,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.subjectmap[model.tablename].one.next(objtodelet",{"_index":337,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.subjectmap[tablemap[tablenam",{"_index":222,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["this.teddybearcompani",{"_index":78,"title":{},"body":{"components/AppComponent.html":{}}}],["this.teddybearlist",{"_index":76,"title":{},"body":{"components/AppComponent.html":{}}}],["this.teddybearsel",{"_index":80,"title":{},"body":{"components/AppComponent.html":{}}}],["this[prop",{"_index":393,"title":{},"body":{"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"classes/TeddyBear.html":{}}}],["throwerror",{"_index":148,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["titl",{"_index":27,"title":{},"body":{"components/AppComponent.html":{}}}],["todo",{"_index":165,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["token",{"_index":188,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["tort",{"_index":567,"title":{},"body":{"license.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{}}}],["tri",{"_index":368,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["true",{"_index":197,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"miscellaneous/variables.html":{}}}],["ts",{"_index":215,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["type",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/IDataBaseObj.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unsuccess",{"_index":352,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["updat",{"_index":196,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["update(model",{"_index":295,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["updatebulk",{"_index":316,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["updateobs(model",{"_index":308,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["url",{"_index":242,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["urlsearchparam",{"_index":231,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["us",{"_index":175,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["user",{"_index":361,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["uuid",{"_index":275,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["valu",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cache.html":{},"interfaces/ITBCompany.html":{},"interfaces/ITBSeller.html":{},"interfaces/ITeddyBear.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"classes/TBCompany.html":{},"classes/TBSeller.html":{},"interfaces/TableCRUD.html":{},"classes/TableMap.html":{},"classes/TeddyBear.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":96,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":489,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["wait",{"_index":172,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["warranti",{"_index":550,"title":{},"body":{"license.html":{}}}],["went",{"_index":357,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["whether",{"_index":191,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{},"license.html":{}}}],["whose",{"_index":131,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["without",{"_index":533,"title":{},"body":{"license.html":{}}}],["wrong",{"_index":358,"title":{},"body":{"interfaces/Cache.html":{},"interfaces/LoadingMap.html":{},"interfaces/SubjectMap.html":{},"interfaces/TableCRUD.html":{}}}],["zone.j",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ds\n                            \n                            \n                                teddyBearCompanies\n                            \n                            \n                                teddyBearList\n                            \n                            \n                                teddyBearSellers\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ds: DataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ds\n                                                  \n                                                        \n                                                                    DataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ds\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ds:     DataService\n\n                    \n                \n                    \n                        \n                            Type :     DataService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teddyBearCompanies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teddyBearCompanies:     TBCompany[]\n\n                    \n                \n                    \n                        \n                            Type :     TBCompany[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teddyBearList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teddyBearList:     TeddyBear[]\n\n                    \n                \n                    \n                        \n                            Type :     TeddyBear[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            teddyBearSellers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        teddyBearSellers:     TBSeller[]\n\n                    \n                \n                    \n                        \n                            Type :     TBSeller[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'dynamic-angular-crud'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { forkJoin } from 'rxjs';\n\nimport { TBCompany } from './models/TBCompany';\nimport { TBSeller } from './models/TBSeller';\nimport { TeddyBear } from './models/TeddyBear';\nimport { DataService } from './shared/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit {\n  teddyBearList: TeddyBear[] = [];\n  teddyBearCompanies: TBCompany[] = [];\n  teddyBearSellers: TBSeller[] = [];\n\n  title = 'dynamic-angular-crud';\n\n  constructor(\n    public ds: DataService\n  ) { }\n\n  ngOnInit(): void {\n    const tbListObs = this.ds.readObs(TeddyBear);\n    const tbCompObs = this.ds.readObs(TBCompany);\n    const tbSellObs = this.ds.readObs(TBSeller);\n\n    forkJoin([tbListObs, tbCompObs, tbSellObs])\n      .subscribe(\n        (res: any) => {\n          this.teddyBearList = res[0];\n          this.teddyBearCompanies = res[1];\n          this.teddyBearSellers = res[2];\n        },\n        err => console.error(err)\n      )\n  }\n}\n\n    \n\n    \n        \n  Dynamic Angular CRUD Example\n\n\n\n  \n    \n      Teddy Bears\n    \n    \n      \n        {{teddyBear.name}}\n      \n    \n  \n  \n    \n      Teddy Bear Companies\n    \n    \n      \n        {{company.name}}\n      \n    \n  \n  \n    \n      Teddy Bear Sellers\n    \n    \n      \n        {{seller.name}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Dynamic Angular CRUD Example            Teddy Bears                      {{teddyBear.name}}                        Teddy Bear Companies                      {{company.name}}                        Teddy Bear Sellers                      {{seller.name}}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nAppModule -->\n\nDataService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     DataService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    MaterialModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\nimport { DataService } from './shared/data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MaterialModule\n  ],\n  providers: [\n    DataService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cache.html":{"url":"interfaces/Cache.html","title":"interface - Cache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Cache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data.service.ts\n        \n\n            \n                Description\n            \n            \n                A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tableName: string]:    any[]\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/data.service.ts:31\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { TableMap } from './table-map';\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  }\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[]\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient\n  ) {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      }\n    });\n  }\n\n  /**\n   * Using a model interface's table definition, do a HTTP get\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param query A limiting query to apply to the get. Expects an object of type URLSearchParams to append to the read, or a simple string\n   */\n  read(model: T | any, query?: HttpParams | String) {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.get(url, httpOpts)\n      .subscribe(\n        res => {\n          this.cacheAndNotifyRead(model, res);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      );\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.get(url, httpOpts)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyRead(model, res);\n        })\n      );\n  }\n\n  private createSearchParams(query: HttpParams | String): HttpParams {\n    let newParams = new HttpParams;\n\n    if (query instanceof String) {\n      const searchParams = new HttpParams();\n      const splitQuery = query.split('&');\n      splitQuery.forEach(param => {\n        const keyValPair = param.split('=');\n        searchParams.set(keyValPair[0], keyValPair[1]);\n      });\n      newParams = searchParams;\n    } else {\n      newParams = query;\n    }\n\n    return newParams;\n  }\n\n  private cacheAndNotifyRead(model: T | any, res: T[]) {\n    this.cache[model.tableName] = [];\n    res.forEach((el: T) => {\n      this.cache[model.tableName].push(new model(el));\n    });\n    // Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n  }\n\n  /**\n   * Create a new object in the database using a front end defined object; will need to wait for the post resolution to get the DB generated UUID assigned to the front end key\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToCreate The front end object to be created\n   */\n  create(model: T | any, objToCreate?: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.post(url, newModelObj, this.httpOptions)\n      .subscribe(\n        (res: any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.post(url, newModelObj, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[] | any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n        })\n      );\n  }\n\n  private cacheAndNotifyCreated(model: T | any, newModelObj) {\n    // Append the new object into the front end cache\n    this.cache[model.tableName].push(Object.assign({}, newModelObj));\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(newModelObj);\n  }\n\n  // TODO: \n  // CREATEBULK\n\n  /**\n   * Update a front end object's values into the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToUpdate The front end object to be updated in the DB\n   */\n  update(model: T | any, objToUpdate: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    if (this.isOptimistic) {\n      this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    this.http.patch(url, localObjToUpdate, this.httpOptions).subscribe(\n      res => {\n        if (!this.isOptimistic) {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        }\n        this.loadingMap[model.tableName] = false;\n      },\n      err => {\n        this.handleHttpError(err);\n        this.loadingMap[model.tableName] = false;\n      }\n    )\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    return this.http.patch(url, copyObjToUpdate, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        })\n      );\n  }\n\n  private cacheAndNotifyUpdated(model: T | any, localObjToUpdate: T, objToUpdate: T) {\n    // Copy the new object into the local object reference using Object.assign\n    Object.assign(localObjToUpdate, objToUpdate);\n\n    // Optimistic Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(localObjToUpdate);\n  }\n\n  // TODO: \n  // UPDATEBULK\n\n  /**\n   * Delete a front end object fron the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToDelete The front end object to be deleted in the DB\n   * @param notifyOne Determine if we should just notify with an object update...\n   */\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.loadingMap[model.tableName] = true;\n\n    // Optimistic Update Frontend\n    if (this.isOptimistic && !stopNotify) {\n      this.cacheAndNotifyDelete(model, objToDelete);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    this.http.delete(url, this.httpOptions)\n      .subscribe(\n        res => {\n          if (!this.isOptimistic && !stopNotify) { // wait for the server response before modifying the front end\n            this.cacheAndNotifyDelete(model, objToDelete);\n          }\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err)\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    if (this.isOptimistic) {\n      // Optimistically Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n      this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    return this.http.delete(url, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          if (!this.isOptimistic) { // wait for the server response before modifying the front end\n            this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n          }\n        })\n      );\n  }\n\n  private cacheAndNotifyDelete(model: T | any, objToDelete: T | any) {\n    // Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n    this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(objToDelete);\n  }\n\n  // TODO: \n  // DELETEBULK\n\n  private handleHttpError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IDataBaseObj.html":{"url":"interfaces/IDataBaseObj.html","title":"interface - IDataBaseObj","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IDataBaseObj\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/_base.ts\n        \n\n            \n                Description\n            \n            \n                Interface that describes fields that will be expected to be available on any database table, including metadata\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        tableName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                    \n                                \n                                \n                                    \n                                        tableName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the table or collection that data is stored in\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface IDataBaseObj {\n    /**\n     * The name of the table or collection that data is stored in\n     */\n    tableName?: string;\n    \n    id: string;\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITBCompany.html":{"url":"interfaces/ITBCompany.html","title":"interface - ITBCompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITBCompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TBCompany.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataBaseObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dateCreated\n                                \n                                \n                                            Optional\n                                        location\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateCreated\n                                    \n                                \n                                \n                                    \n                                        dateCreated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ITBCompany extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class TBCompany implements ITBCompany {\n    static tableName: string = TableMap.TBCompanies;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ITBCompany) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITBSeller.html":{"url":"interfaces/ITBSeller.html","title":"interface - ITBSeller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITBSeller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TBSeller.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataBaseObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dateCreated\n                                \n                                \n                                            Optional\n                                        location\n                                \n                                \n                                            Optional\n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dateCreated\n                                    \n                                \n                                \n                                    \n                                        dateCreated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ITBSeller extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class TBSeller implements ITBSeller {\n    static tableName: string = TableMap.TBCompanies;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ITBSeller) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITeddyBear.html":{"url":"interfaces/ITeddyBear.html","title":"interface - ITeddyBear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ITeddyBear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TeddyBear.ts\n        \n\n\n            \n                Extends\n            \n            \n                    IDataBaseObj\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        age\n                                \n                                \n                                            Optional\n                                        companyKey\n                                \n                                \n                                            Optional\n                                        dateCreated\n                                \n                                \n                                            Optional\n                                        dateObtained\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        origin\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                    \n                                \n                                \n                                    \n                                        age:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        companyKey\n                                    \n                                \n                                \n                                    \n                                        companyKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateCreated\n                                    \n                                \n                                \n                                    \n                                        dateCreated:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateObtained\n                                    \n                                \n                                \n                                    \n                                        dateObtained:     Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        origin\n                                    \n                                \n                                \n                                    \n                                        origin:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { IDataBaseObj } from './_base';\nimport { TableMap } from '../shared/table-map';\n\nexport interface ITeddyBear extends IDataBaseObj {\n    name?: string;\n    type?: string;\n    origin?: string;\n    age?: number;\n    dateCreated?: Date;\n    dateObtained?: Date;\n\n    companyKey?: string;\n}\n\nexport class TeddyBear implements ITeddyBear {\n    static tableName: string = TableMap.TeddyBears;\n\n    id: string;\n\n    name: string;\n    type: string;\n    origin: string;\n    age: number;\n    dateCreated: Date;\n    dateObtained: Date;\n\n    companyKey: string;\n\n    constructor(props: ITeddyBear) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoadingMap.html":{"url":"interfaces/LoadingMap.html","title":"interface - LoadingMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoadingMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data.service.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tableName: string]:    boolean\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/data.service.ts:24\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { TableMap } from './table-map';\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  }\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[]\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient\n  ) {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      }\n    });\n  }\n\n  /**\n   * Using a model interface's table definition, do a HTTP get\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param query A limiting query to apply to the get. Expects an object of type URLSearchParams to append to the read, or a simple string\n   */\n  read(model: T | any, query?: HttpParams | String) {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.get(url, httpOpts)\n      .subscribe(\n        res => {\n          this.cacheAndNotifyRead(model, res);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      );\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.get(url, httpOpts)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyRead(model, res);\n        })\n      );\n  }\n\n  private createSearchParams(query: HttpParams | String): HttpParams {\n    let newParams = new HttpParams;\n\n    if (query instanceof String) {\n      const searchParams = new HttpParams();\n      const splitQuery = query.split('&');\n      splitQuery.forEach(param => {\n        const keyValPair = param.split('=');\n        searchParams.set(keyValPair[0], keyValPair[1]);\n      });\n      newParams = searchParams;\n    } else {\n      newParams = query;\n    }\n\n    return newParams;\n  }\n\n  private cacheAndNotifyRead(model: T | any, res: T[]) {\n    this.cache[model.tableName] = [];\n    res.forEach((el: T) => {\n      this.cache[model.tableName].push(new model(el));\n    });\n    // Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n  }\n\n  /**\n   * Create a new object in the database using a front end defined object; will need to wait for the post resolution to get the DB generated UUID assigned to the front end key\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToCreate The front end object to be created\n   */\n  create(model: T | any, objToCreate?: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.post(url, newModelObj, this.httpOptions)\n      .subscribe(\n        (res: any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.post(url, newModelObj, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[] | any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n        })\n      );\n  }\n\n  private cacheAndNotifyCreated(model: T | any, newModelObj) {\n    // Append the new object into the front end cache\n    this.cache[model.tableName].push(Object.assign({}, newModelObj));\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(newModelObj);\n  }\n\n  // TODO: \n  // CREATEBULK\n\n  /**\n   * Update a front end object's values into the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToUpdate The front end object to be updated in the DB\n   */\n  update(model: T | any, objToUpdate: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    if (this.isOptimistic) {\n      this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    this.http.patch(url, localObjToUpdate, this.httpOptions).subscribe(\n      res => {\n        if (!this.isOptimistic) {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        }\n        this.loadingMap[model.tableName] = false;\n      },\n      err => {\n        this.handleHttpError(err);\n        this.loadingMap[model.tableName] = false;\n      }\n    )\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    return this.http.patch(url, copyObjToUpdate, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        })\n      );\n  }\n\n  private cacheAndNotifyUpdated(model: T | any, localObjToUpdate: T, objToUpdate: T) {\n    // Copy the new object into the local object reference using Object.assign\n    Object.assign(localObjToUpdate, objToUpdate);\n\n    // Optimistic Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(localObjToUpdate);\n  }\n\n  // TODO: \n  // UPDATEBULK\n\n  /**\n   * Delete a front end object fron the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToDelete The front end object to be deleted in the DB\n   * @param notifyOne Determine if we should just notify with an object update...\n   */\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.loadingMap[model.tableName] = true;\n\n    // Optimistic Update Frontend\n    if (this.isOptimistic && !stopNotify) {\n      this.cacheAndNotifyDelete(model, objToDelete);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    this.http.delete(url, this.httpOptions)\n      .subscribe(\n        res => {\n          if (!this.isOptimistic && !stopNotify) { // wait for the server response before modifying the front end\n            this.cacheAndNotifyDelete(model, objToDelete);\n          }\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err)\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    if (this.isOptimistic) {\n      // Optimistically Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n      this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    return this.http.delete(url, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          if (!this.isOptimistic) { // wait for the server response before modifying the front end\n            this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n          }\n        })\n      );\n  }\n\n  private cacheAndNotifyDelete(model: T | any, objToDelete: T | any) {\n    // Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n    this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(objToDelete);\n  }\n\n  // TODO: \n  // DELETEBULK\n\n  private handleHttpError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MaterialModule.html":{"url":"modules/MaterialModule.html","title":"module - MaterialModule","body":"\n                   \n\n\n\n\n  Modules\n  MaterialModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/material.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport {\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatIconRegistry,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSnackBarRef,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n} from '@angular/material';\n\n@NgModule({\n    imports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatFormFieldModule\n    ],\n    exports: [\n        MatAutocompleteModule,\n        MatButtonModule,\n        MatButtonToggleModule,\n        MatCardModule,\n        MatCheckboxModule,\n        MatChipsModule,\n        MatStepperModule,\n        MatDatepickerModule,\n        MatDialogModule,\n        MatExpansionModule,\n        MatGridListModule,\n        MatIconModule,\n        MatInputModule,\n        MatListModule,\n        MatMenuModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatProgressBarModule,\n        MatProgressSpinnerModule,\n        MatRadioModule,\n        MatRippleModule,\n        MatSelectModule,\n        MatSidenavModule,\n        MatSliderModule,\n        MatSlideToggleModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatTabsModule,\n        MatToolbarModule,\n        MatTooltipModule,\n        MatFormFieldModule\n    ],\n    providers: [\n        MatIconRegistry,\n        // MatSnackBarRef\n    ]\n})\nexport class MaterialModule {\n    constructor(public matIconRegistry: MatIconRegistry) {\n        matIconRegistry.registerFontClassAlias('fontawesome', 'fa');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SubjectMap.html":{"url":"interfaces/SubjectMap.html","title":"interface - SubjectMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SubjectMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data.service.ts\n        \n\n            \n                Description\n            \n            \n                A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\nComponents can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\nTODO: Spread this into an individual CRUD subject for each table\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [tableName: string]:    literal type\n\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/data.service.ts:14\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { TableMap } from './table-map';\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  }\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[]\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient\n  ) {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      }\n    });\n  }\n\n  /**\n   * Using a model interface's table definition, do a HTTP get\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param query A limiting query to apply to the get. Expects an object of type URLSearchParams to append to the read, or a simple string\n   */\n  read(model: T | any, query?: HttpParams | String) {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.get(url, httpOpts)\n      .subscribe(\n        res => {\n          this.cacheAndNotifyRead(model, res);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      );\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.get(url, httpOpts)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyRead(model, res);\n        })\n      );\n  }\n\n  private createSearchParams(query: HttpParams | String): HttpParams {\n    let newParams = new HttpParams;\n\n    if (query instanceof String) {\n      const searchParams = new HttpParams();\n      const splitQuery = query.split('&');\n      splitQuery.forEach(param => {\n        const keyValPair = param.split('=');\n        searchParams.set(keyValPair[0], keyValPair[1]);\n      });\n      newParams = searchParams;\n    } else {\n      newParams = query;\n    }\n\n    return newParams;\n  }\n\n  private cacheAndNotifyRead(model: T | any, res: T[]) {\n    this.cache[model.tableName] = [];\n    res.forEach((el: T) => {\n      this.cache[model.tableName].push(new model(el));\n    });\n    // Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n  }\n\n  /**\n   * Create a new object in the database using a front end defined object; will need to wait for the post resolution to get the DB generated UUID assigned to the front end key\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToCreate The front end object to be created\n   */\n  create(model: T | any, objToCreate?: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.post(url, newModelObj, this.httpOptions)\n      .subscribe(\n        (res: any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.post(url, newModelObj, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[] | any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n        })\n      );\n  }\n\n  private cacheAndNotifyCreated(model: T | any, newModelObj) {\n    // Append the new object into the front end cache\n    this.cache[model.tableName].push(Object.assign({}, newModelObj));\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(newModelObj);\n  }\n\n  // TODO: \n  // CREATEBULK\n\n  /**\n   * Update a front end object's values into the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToUpdate The front end object to be updated in the DB\n   */\n  update(model: T | any, objToUpdate: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    if (this.isOptimistic) {\n      this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    this.http.patch(url, localObjToUpdate, this.httpOptions).subscribe(\n      res => {\n        if (!this.isOptimistic) {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        }\n        this.loadingMap[model.tableName] = false;\n      },\n      err => {\n        this.handleHttpError(err);\n        this.loadingMap[model.tableName] = false;\n      }\n    )\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    return this.http.patch(url, copyObjToUpdate, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        })\n      );\n  }\n\n  private cacheAndNotifyUpdated(model: T | any, localObjToUpdate: T, objToUpdate: T) {\n    // Copy the new object into the local object reference using Object.assign\n    Object.assign(localObjToUpdate, objToUpdate);\n\n    // Optimistic Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(localObjToUpdate);\n  }\n\n  // TODO: \n  // UPDATEBULK\n\n  /**\n   * Delete a front end object fron the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToDelete The front end object to be deleted in the DB\n   * @param notifyOne Determine if we should just notify with an object update...\n   */\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.loadingMap[model.tableName] = true;\n\n    // Optimistic Update Frontend\n    if (this.isOptimistic && !stopNotify) {\n      this.cacheAndNotifyDelete(model, objToDelete);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    this.http.delete(url, this.httpOptions)\n      .subscribe(\n        res => {\n          if (!this.isOptimistic && !stopNotify) { // wait for the server response before modifying the front end\n            this.cacheAndNotifyDelete(model, objToDelete);\n          }\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err)\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    if (this.isOptimistic) {\n      // Optimistically Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n      this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    return this.http.delete(url, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          if (!this.isOptimistic) { // wait for the server response before modifying the front end\n            this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n          }\n        })\n      );\n  }\n\n  private cacheAndNotifyDelete(model: T | any, objToDelete: T | any) {\n    // Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n    this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(objToDelete);\n  }\n\n  // TODO: \n  // DELETEBULK\n\n  private handleHttpError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TBCompany.html":{"url":"classes/TBCompany.html","title":"class - TBCompany","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TBCompany\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TBCompany.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ITBCompany\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateCreated\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITBCompany)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/TBCompany.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    ITBCompany\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBCompany.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBCompany.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBCompany.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBCompany.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TableMap.TBCompanies\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBCompany.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ITBCompany extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class TBCompany implements ITBCompany {\n    static tableName: string = TableMap.TBCompanies;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ITBCompany) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TBSeller.html":{"url":"classes/TBSeller.html","title":"class - TBSeller","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TBSeller\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TBSeller.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ITBSeller\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dateCreated\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                location\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Static\n                                tableName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITBSeller)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/TBSeller.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    ITBSeller\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBSeller.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBSeller.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            location\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        location:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBSeller.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBSeller.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TableMap.TBCompanies\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TBSeller.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { TableMap } from './../shared/table-map';\nimport { IDataBaseObj } from './_base';\n\nexport interface ITBSeller extends IDataBaseObj {\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n}\n\nexport class TBSeller implements ITBSeller {\n    static tableName: string = TableMap.TBCompanies;\n\n    id: string;\n\n    name?: string;\n    location?: string;\n    dateCreated?: Date;\n\n    constructor(props: ITBSeller) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TableCRUD.html":{"url":"interfaces/TableCRUD.html","title":"interface - TableCRUD","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TableCRUD\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/data.service.ts\n        \n\n            \n                Description\n            \n            \n                An interface for what we expect to be used for dynamic Table CRUD\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cache\n                                \n                                \n                                        loadingMap\n                                \n                                \n                                        subjectMap\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                    \n                                \n                                \n                                    \n                                        cache:     Cache\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Cache\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadingMap\n                                    \n                                \n                                \n                                    \n                                        loadingMap:     LoadingMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoadingMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subjectMap\n                                    \n                                \n                                \n                                    \n                                        subjectMap:     SubjectMap\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SubjectMap\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\nimport { environment } from './../../environments/environment';\nimport { TableMap } from './table-map';\n\n/**\n * A mapping of every environment defined DB table to a subject so that CRUD applications can send notifications to all subject subscribers\n * Components can subscribe to the \"many\" subject to receive an array of new objects, or to the \"one\" subject to get a single object\n * TODO: Spread this into an individual CRUD subject for each table\n */\ninterface SubjectMap {\n  [tableName: string]: {\n    many: Subject;\n    one: Subject;\n  }\n}\n\n/**\n * A mapping of every DB table to a load boolean so that external components can wait for a table's data to be loaded\n */\ninterface LoadingMap {\n  [tableName: string]: boolean\n}\n\n/**\n * A simple cache which is an object whose properties is a table name with an array of that table's data loaded into the front end\n */\ninterface Cache {\n  [tableName: string]: any[]\n}\n\n/**\n * An interface for what we expect to be used for dynamic Table CRUD\n */\ninterface TableCRUD {\n  cache: Cache;\n  subjectMap: SubjectMap;\n  loadingMap: LoadingMap;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  endpoint: string = environment.serverUrl;\n\n  // Define header options to be applied to all requests\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json',\n      // 'Authorization': 'my-auth-token'\n    }),\n    params: new HttpParams()\n  };\n\n  // Determine whether or not to be optimstic with our Http calls in terms of updating the front end. True means update the front end right away despite what the server does.\n  isOptimistic = true;\n\n  // A simple object that is used a cache for any data that has been loaded into the system\n  cache: any = {};\n  // A map of TableName => Subject for external components to subscribe to, in order to be notified of updates to that table's data\n  subjectMap: SubjectMap = {};\n  // A map of TableName => Boolean to components to use for displaying a loading icon when that table's data is being loaded or modified\n  loadingMap: LoadingMap = {};\n\n  constructor(\n    private http: HttpClient\n  ) {\n    // TODO: Figure out how to make a subject with the correct TS model based on the table name\n    Object.keys(TableMap).forEach(tableName => {\n      this.loadingMap[TableMap[tableName]] = false;\n      this.cache[TableMap[tableName]] = [];\n      this.subjectMap[TableMap[tableName]] = {\n        many: new Subject(),\n        one: new Subject()\n      }\n    });\n  }\n\n  /**\n   * Using a model interface's table definition, do a HTTP get\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param query A limiting query to apply to the get. Expects an object of type URLSearchParams to append to the read, or a simple string\n   */\n  read(model: T | any, query?: HttpParams | String) {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.get(url, httpOpts)\n      .subscribe(\n        res => {\n          this.cacheAndNotifyRead(model, res);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      );\n  }\n\n  readObs(model: T | any, query?: HttpParams | String): Observable {\n    this.loadingMap[model.tableName] = true;\n\n    const httpOpts = Object.assign({}, this.httpOptions);\n\n    if (query) {\n      httpOpts.params = this.createSearchParams(query);\n    }\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.get(url, httpOpts)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyRead(model, res);\n        })\n      );\n  }\n\n  private createSearchParams(query: HttpParams | String): HttpParams {\n    let newParams = new HttpParams;\n\n    if (query instanceof String) {\n      const searchParams = new HttpParams();\n      const splitQuery = query.split('&');\n      splitQuery.forEach(param => {\n        const keyValPair = param.split('=');\n        searchParams.set(keyValPair[0], keyValPair[1]);\n      });\n      newParams = searchParams;\n    } else {\n      newParams = query;\n    }\n\n    return newParams;\n  }\n\n  private cacheAndNotifyRead(model: T | any, res: T[]) {\n    this.cache[model.tableName] = [];\n    res.forEach((el: T) => {\n      this.cache[model.tableName].push(new model(el));\n    });\n    // Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n  }\n\n  /**\n   * Create a new object in the database using a front end defined object; will need to wait for the post resolution to get the DB generated UUID assigned to the front end key\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToCreate The front end object to be created\n   */\n  create(model: T | any, objToCreate?: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    this.http.post(url, newModelObj, this.httpOptions)\n      .subscribe(\n        (res: any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err);\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  createObs(model: T | any, objToCreate?: T | any): Observable {\n    const newModelObj = new model(objToCreate);\n\n    const url = `${this.endpoint}${model.tableName}`;\n    return this.http.post(url, newModelObj, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[] | any) => {\n          newModelObj.key = res.key || res.ObjectId || res.id || '';\n          this.cacheAndNotifyCreated(model, newModelObj);\n        })\n      );\n  }\n\n  private cacheAndNotifyCreated(model: T | any, newModelObj) {\n    // Append the new object into the front end cache\n    this.cache[model.tableName].push(Object.assign({}, newModelObj));\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(newModelObj);\n  }\n\n  // TODO: \n  // CREATEBULK\n\n  /**\n   * Update a front end object's values into the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToUpdate The front end object to be updated in the DB\n   */\n  update(model: T | any, objToUpdate: T | any) {\n    this.loadingMap[model.tableName] = true;\n\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    if (this.isOptimistic) {\n      this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    this.http.patch(url, localObjToUpdate, this.httpOptions).subscribe(\n      res => {\n        if (!this.isOptimistic) {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        }\n        this.loadingMap[model.tableName] = false;\n      },\n      err => {\n        this.handleHttpError(err);\n        this.loadingMap[model.tableName] = false;\n      }\n    )\n  }\n\n  updateObs(model: T | any, objToUpdate: T | any): Observable {\n    // Find the front end object to update in the cache\n    const localObjToUpdate: T | any = this.cache[model.tableName].find(el => el.key === objToUpdate.key);\n    if (!localObjToUpdate) {\n      return;\n    }\n    let copyObjToUpdate = Object.assign({}, localObjToUpdate);\n    copyObjToUpdate = Object.assign(copyObjToUpdate, objToUpdate);\n\n    const url = `${this.endpoint}${model.tableName}/${localObjToUpdate.key}`;\n    return this.http.patch(url, copyObjToUpdate, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          this.cacheAndNotifyUpdated(model, localObjToUpdate, objToUpdate);\n        })\n      );\n  }\n\n  private cacheAndNotifyUpdated(model: T | any, localObjToUpdate: T, objToUpdate: T) {\n    // Copy the new object into the local object reference using Object.assign\n    Object.assign(localObjToUpdate, objToUpdate);\n\n    // Optimistic Update Frontend\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(localObjToUpdate);\n  }\n\n  // TODO: \n  // UPDATEBULK\n\n  /**\n   * Delete a front end object fron the database\n   * @param model The interface / class to construct the query against and build response objects from\n   * @param objToDelete The front end object to be deleted in the DB\n   * @param notifyOne Determine if we should just notify with an object update...\n   */\n  delete(model: T | any, objToDelete: T | any, stopNotify?: boolean) {\n    this.loadingMap[model.tableName] = true;\n\n    // Optimistic Update Frontend\n    if (this.isOptimistic && !stopNotify) {\n      this.cacheAndNotifyDelete(model, objToDelete);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    this.http.delete(url, this.httpOptions)\n      .subscribe(\n        res => {\n          if (!this.isOptimistic && !stopNotify) { // wait for the server response before modifying the front end\n            this.cacheAndNotifyDelete(model, objToDelete);\n          }\n          this.loadingMap[model.tableName] = false;\n        },\n        err => {\n          this.handleHttpError(err)\n          this.loadingMap[model.tableName] = false;\n        }\n      )\n  }\n\n  deleteObs(model: T | any, objToDelete: T | any): Observable {\n    if (this.isOptimistic) {\n      // Optimistically Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n      this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n    }\n\n    const url = `${this.endpoint}${model.tableName}/${objToDelete.key || objToDelete.id}`;\n    return this.http.delete(url, this.httpOptions)\n      .pipe(\n        catchError(this.handleHttpError),\n        tap((res: T[]) => {\n          if (!this.isOptimistic) { // wait for the server response before modifying the front end\n            this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n          }\n        })\n      );\n  }\n\n  private cacheAndNotifyDelete(model: T | any, objToDelete: T | any) {\n    // Remove the object to delete from the front end cache by filtering out everything that doesn't have the same key\n    this.cache[model.tableName] = this.cache[model.tableName].filter(el => el.key !== objToDelete.key);\n\n    this.subjectMap[model.tableName].many.next(this.cache[model.tableName]);\n    this.subjectMap[model.tableName].one.next(objToDelete);\n  }\n\n  // TODO: \n  // DELETEBULK\n\n  private handleHttpError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error.message);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong,\n      console.error(\n        `Backend returned code ${error.status}, ` +\n        `body was: ${error.error}`);\n    }\n    // return an observable with a user-facing error message\n    return throwError(\n      'Something bad happened; please try again later.');\n  };\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TableMap.html":{"url":"classes/TableMap.html","title":"class - TableMap","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TableMap\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/table-map.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                TBCompanies\n                            \n                            \n                                    Static\n                                TBSellers\n                            \n                            \n                                    Static\n                                TeddyBears\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TBCompanies\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TBCompanies:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TeddyBearCompanies'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/table-map.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TBSellers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TBSellers:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TeddyBearSellers'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/table-map.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            TeddyBears\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TeddyBears:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TeddyBears'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/shared/table-map.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TableMap {\n    static TeddyBears = 'TeddyBears';\n    static TBCompanies = 'TeddyBearCompanies';\n    static TBSellers = 'TeddyBearSellers';\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TeddyBear.html":{"url":"classes/TeddyBear.html","title":"class - TeddyBear","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TeddyBear\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/TeddyBear.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        ITeddyBear\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                companyKey\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateObtained\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                origin\n                            \n                            \n                                    Static\n                                tableName\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: ITeddyBear)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/TeddyBear.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                    ITeddyBear\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        age:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            companyKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        companyKey:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateObtained\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateObtained:     Date\n\n                    \n                \n                    \n                        \n                            Type :     Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            origin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        origin:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            tableName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tableName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : TableMap.TeddyBears\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/models/TeddyBear.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IDataBaseObj } from './_base';\nimport { TableMap } from '../shared/table-map';\n\nexport interface ITeddyBear extends IDataBaseObj {\n    name?: string;\n    type?: string;\n    origin?: string;\n    age?: number;\n    dateCreated?: Date;\n    dateObtained?: Date;\n\n    companyKey?: string;\n}\n\nexport class TeddyBear implements ITeddyBear {\n    static tableName: string = TableMap.TeddyBears;\n\n    id: string;\n\n    name: string;\n    type: string;\n    origin: string;\n    age: number;\n    dateCreated: Date;\n    dateObtained: Date;\n\n    companyKey: string;\n\n    constructor(props: ITeddyBear) {\n        Object.keys(props).forEach(prop => {\n            const value = props[prop];\n            this[prop] = value;\n        });\n    }\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/TBCompany.ts\n            \n            \n                class\n            \n            \n                TBCompany\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/TBCompany.ts\n            \n            \n                interface\n            \n            \n                ITBCompany\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/TBSeller.ts\n            \n            \n                class\n            \n            \n                TBSeller\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/TBSeller.ts\n            \n            \n                interface\n            \n            \n                ITBSeller\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/TeddyBear.ts\n            \n            \n                class\n            \n            \n                TeddyBear\n            \n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/models/TeddyBear.ts\n            \n            \n                interface\n            \n            \n                ITeddyBear\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/_base.ts\n            \n            \n                interface\n            \n            \n                IDataBaseObj\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/shared/data.service.ts\n            \n            \n                injectable\n            \n            \n                DataService\n            \n            \n                18 %\n                (4/22)\n            \n        \n        \n            \n                \n                src/app/shared/data.service.ts\n            \n            \n                interface\n            \n            \n                Cache\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/data.service.ts\n            \n            \n                interface\n            \n            \n                LoadingMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/data.service.ts\n            \n            \n                interface\n            \n            \n                SubjectMap\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/data.service.ts\n            \n            \n                interface\n            \n            \n                TableCRUD\n            \n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/table-map.ts\n            \n            \n                class\n            \n            \n                TableMap\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.0.4\n        \n            @angular/cdk : ^7.1.0\n        \n            @angular/common : ~7.0.0\n        \n            @angular/compiler : ~7.0.0\n        \n            @angular/core : ~7.0.0\n        \n            @angular/forms : ~7.0.0\n        \n            @angular/http : ~7.0.0\n        \n            @angular/material : ^7.1.0\n        \n            @angular/platform-browser : ~7.0.0\n        \n            @angular/platform-browser-dynamic : ~7.0.0\n        \n            @angular/router : ~7.0.0\n        \n            bootstrap : ^4.1.3\n        \n            core-js : ^2.5.4\n        \n            faker : ^4.1.0\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ~6.3.3\n        \n            zone.js : ~0.8.26\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\ndynamic-angular-crud\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 PaddingtonTheBear\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MaterialModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nMaterialModule\n\nMaterialModule\n\nAppModule -->\n\nMaterialModule->AppModule\n\n\n\n\n\nDataService\n\nDataService\n\nAppModule -->\n\nDataService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Component\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n\n  serverUrl: 'http://localhost:3000/'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
